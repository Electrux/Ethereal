ldmod std.regex;
import std.vec;

struct _regex_t {}

re = _regex_t{};

mfn< regex_t > match_in_vec( vec ) {
	if self.empty() { return vec; }
	__res__ = [];
	for __e__ in vec.iter() {
		if self.match( __e__ ) { __res__.push( __e__ ); }
	}
	return __res__;
}

mfn< regex_t > inv_match_in_vec( vec ) {
	if self.empty() { return vec; }
	__res__ = [];
	for __e__ in vec.iter() {
		if !self.match( __e__ ) { __res__.push( __e__ ); }
	}
	return __res__;
}