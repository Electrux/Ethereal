#!./buildfiles/et

a = 5;
b = 10;

assert( 1 == 1, '1 should be 1' );
assert( 0 != 1, '0 should be 1' );
assert( 1 < 2, '1 should be < 2' );
assert( 1 <= 1, '1 should be <= 1' );
assert( 2 > 1, '2 should be > 1' );
assert( 1 >= 1, '1 should be >= 1' );
assert( !0, '!0 should be 1' );

assert( 5 + 10 == 15, '5 + 10 should be: 15' );
assert( 5 - 10 == -5, '5 - 10 should be: -5' );
assert( 5 * 10 == 50, '5 * 10 should be: 50' );
assert( 5 / 10 == 0, '5 / 10 should be: 0' );
assert( 5 % 10 == 5, '5 % 10 should be: 5' );

assert( ( a += 10 ) == 15, '5 += 10 should be: 15' );
assert( ( a -= 10 ) == 5, '15 -= 10 should be: 5' );
assert( ( a *= 10 ) == 50, '5 *= 10 should be: 50' );
assert( ( a /= 10 ) == 5, '50 /= 10 should be: 50' );
assert( ( a %= 10 ) == 5, '5 %= 10 should be: 5' );

assert( 2 << 2 == 8, '2 << 2 should be 8' );
assert( 2 >> 1 == 1, '2 >> 1 should be 1' );

assert( ( a <<= 2 ) == 20, '5 <<= 2 should be 20' );
assert( ( a >>= 2 ) == 5, '20 >>= 2 should be 5' );

assert( 5 & 4 == 4, '5 & 4 should be 4' );
assert( 5 | 3 == 7, '5 | 3 should be 7' );
assert( ~5 == -6, '~5 should be -6' );

assert( 5 ** 4 == 625, '5 ** 4 should be 625' );

assert( -6 == -6, '-6 should be -6' );

assert( num( '1252' ) == 1252, 'num( \'1252\' ) should be 1252' );