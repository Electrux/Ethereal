#!./buildfiles/et

import std.vec;

for i = 1; i < 10; i += 1 {
	if i == 2 { println( 'continuing on i = 2' ); continue; }
	if i == 5 { println( 'breaking on i = 5' ); break; }
	for j = 1; j < 10; j += 1 {
		if j == 2 { println( 'continuing on j = 2' ); continue; }
		if j == 5 { println( 'breaking on j = 5' ); break; }
		println( 'i: ', i, ' j: ', j );
	}
}

assert( var_exists( 'i' ) == false, 'i should not exist here' );
assert( var_exists( 'j' ) == false, 'j should not exist here' );

for i in range( 1, 10 ) {
	if i == 2 { println( 'continuing on i = 2' ); continue; }
	if i == 5 { println( 'breaking on i = 5' ); break; }
	for j in range( 1, 10, 1 ) {
		if j == 2 { println( 'continuing on j = 2' ); continue; }
		if j == 5 { println( 'breaking on j = 5' ); break; }
		println( 'i: ', i, ' j: ', j );
	}
}

assert( var_exists( 'i' ) == false, 'i should not exist here' );
assert( var_exists( 'j' ) == false, 'j should not exist here' );
assert( var_exists( '._i' ) == false, '._i should not exist here' );
assert( var_exists( '._j' ) == false, '._j should not exist here' );