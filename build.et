import cxxproj;

proj = cxx_new_proj();

proj.set_author( 'Elec', 'ElectruxRedsworth@gmail.com' );

self_prefix = false;
if os.get_env( 'PREFIX' ).empty() {
	os.set_env( 'PREFIX', os.get_env( 'PWD' ) );
	self_prefix = true;
}

proj.add_flags( [ '-fPIC', '-pedantic', '-Wall', '-Wextra', '-Wno-unused-parameter',
		  '-DBUILD_PREFIX_DIR=' + os.get_env( 'PREFIX' ),
		  '-Wl,-rpath,./buildfiles/' ] );

if os.get_env( 'CC' ) != 'g++' {
	proj.add_flags( [ '-Wno-c99-extensions', '-Wno-unused-command-line-argument' ] );
}

proj.add_lib_dirs( [ '-L./buildfiles/' ] );

proj.use_libs( [ 'dl', 'gmpxx' ] );

if args.len() > 0 && args.find( 'debug' ) >= 0 || args.find( 'memlog' ) >= 0 {
	if os.exec( 'stat buildfiles 1>/dev/null 2>&1' ) == 0 && os.exec( 'stat buildfiles/.debug_mode 1>/dev/null 2>&1' ) != 0 {
		#os.exec( 'rm -rf buildfiles && mkdir buildfiles && touch buildfiles/.debug_mode' );
	}
	if args.find( 'debug' ) >= 0 { proj.add_flags( [ '-DDEBUG_MODE', '-DMEM_LOGS' ] ); }
	else { proj.add_flags( [ '-DMEM_LOGS' ] ); }
} else {
	if os.exec( 'stat buildfiles 1>/dev/null 2>&1' ) == 0 && os.exec( 'stat buildfiles/.debug_mode 1>/dev/null 2>&1' ) == 0 {
		#os.exec( 'rm -rf buildfiles' );
	}
	proj.add_flags( [ '-march=native', '-O2', '-flto' ] );
}

proj.add_build( 'et', 'bin' );
proj.build( 'et' ).add_srcs( 'src/FE/(.*)\.cpp' ).main_src( 'src/FE/Main.cpp' ).perform();

if argc > 0 && argv[ 0 ] == 'install' || self_prefix == true {
	if os.get_env( 'EUID' ) == 0 || os.base_name == 'osx' {
		os.install( 'buildfiles/et', os.get_env( 'PREFIX' ) + '/bin/' );
	} else {
		cprintln( '{r}Run as root to install the built files{0}' );
	}
}