#!/usr/bin/env et

import std.str;
import std.vec;
import std.fs;

assert( fs.exists( __SRC_DIR__ + '/../pre' ) );
assert( fs.exists( __SRC_DIR__ + '/vec.et' ) );

# read non existing file
{
	f = fopen( 'some_file', 'r' );
	assert( !f.is_open() );
}

# write file
{
	f = fopen( 'some_file', 'w' );
	assert( f.is_open() );
	f.write( 'some data\n' );
}

# append file
{
	f = fopen( 'some_file', 'a' );
	assert( f.is_open() );
	f.write( 'some data 2\n' );
}

# read each line
{
	f = fopen( 'some_file', 'r' );
	assert( f.is_open() );
	s = "";
	f.read( s );
	assert_eq( s, 'some data' );
	f.read( s );
	assert_eq( s, 'some data 2' );
}

# read entire file in vector
{
	f = fopen( 'some_file', 'r' );
	assert( f.is_open() );
	v = [];
	f.read_all( v );
	assert_eq( v, [ 'some data', 'some data 2' ] );
}

assert( fs.remove( 'some_file' ) );
assert( !fs.exists( 'some_file' ) );
