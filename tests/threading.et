#!/usr/bin/env et

import std.vec;
import std.str;
import std.threads;

assert( threads.nproc > 0, "threads.nproc should be greater than 0" );

tpool = [];

max_procs = threads.nproc;
if max_procs > 8 { max_procs = 8; }

for i = 0; i < max_procs; i += 1 {
	tpool.push( threads.new_exec( __PROG__ + ' bst.et ', i ) );
	println( 'Created thread #', i );
}

# some work

failed = 0;
for ; tpool.len() > 0; {
	for i = 0; i < tpool.len(); i += 1 {
		if tpool[ i ].done() {
			t = tpool[ i ];
			println( 'Finished ', t.id(), ' with result: ', t.res() );
			if t.res() != 0 { failed += 1; }
			tpool.erase( i );
			i -= 1;
		}
	}
}

exit( failed );