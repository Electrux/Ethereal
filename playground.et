#!@BINARY_LOC@

import eth.vm;
import std.( str, vec, term );

vm = evm.new();

res = 0;
exit_code = 0;

indent = 0;
line_id = 0;
input = '';
lines = [];
for ; vm.is_running(); {
	if indent == 0 {
		cprint( res == 0 ? '{g}0' : '{r}' + res.to_str(), ' {c}>{0} ' );
	} else {
		cprint( '{y}...{0} ' );
	}
	input = scan();

	if input == '!!!' { break; }

	lines.push( input );

	if input.back() == '{' { indent += 1; continue; }
	if input.back() == '}' { if indent > 0 { indent -= 1; } }
	if indent > 0 { continue; }

	res = vm.exec_code( lines, exit_code );

	lines.clear();
}

println( 'Exiting playground vm with code: ', exit_code );

exit( exit_code );
