#!/usr/bin/env et

import std.vec;

v = [];
v += [ 1, 2 ];

assert_eq( [], [] );
assert_eq( [ 1, 2 ], [ 1, 2 ] );
assert_ne( [ 1, 3 ], [ 1, 2 ] );

v2 = [ 5, 6 ];
v2 = v;
v2[ 0 ] = 0;

assert_eq( v, [ 1, 2 ] );
assert_eq( v2, [ 0, 2 ] );

v.push( 3 );
assert_eq( v, [ 1, 2, 3 ] );

v.pop();
assert_eq( v, [ 1, 2 ] );

v.pop_front();
assert_eq( v, [ 2 ] );

v.push_front( 1 );
assert_eq( v, [ 1, 2 ] );

v.push( 3 );
assert_eq( v.front(), 1 );
assert_eq( v.back(), 3 );
assert_eq( v.len(), 3 );

v.clear();
assert_eq( v.len(), 0 );

v.push_front( 1 );
assert_eq( v, [ 1 ] );

assert_eq( v.find( 1 ), 0 );
assert_eq( v.find( 2 ), -1 );

v = [ 1, 2, 3, 4, 5, 6 ];

assert( v.erase( 3 ) );
assert_nt( v.erase(  5 ) );
assert_nt( v.erase( -1 ) );

assert_eq( v.len(), 5 );
assert_eq( v, [ 1, 2, 3, 5, 6 ] );

for i = 0; i < v.len(); i += 1 {
	v.erase( i );
	i -= 1;
}

assert_eq( v.len(), 0 );