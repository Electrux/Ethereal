import std.str;
import std.vec;
import std.fs;
import std.os;

import './cxxbuild';

struct _cxx_proj_t {
	flags = [];
	inc_dirs = [];
	lib_dirs = [];
	lib_flags = [];
	builds = [];
}

fn cxx_new_proj() {
	if os.get_env( 'CC' ).empty() {
		if os.name == 'linux' {
			os.set_env( 'CC', 'g++' );
		} else {
			os.set_env( 'CC', 'clang++' );
		}
	}
	return _cxx_proj_t{};
}

mfn< _cxx_proj_t > add_build( name, type ) {
	b = _cxx_build_t{ name, type };
	self.builds.push( b );
	return self.builds[ self.builds.len() - 1 ];
}

mfn< _cxx_proj_t > build() {

}

import './flags';
import './libs';