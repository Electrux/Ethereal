import std.__map__;

mfn< _cxx_proj_t, _cxx_build_t > add_lib_dirs( dirs ) {
	self.__lib_dirs__ += dirs;
}

mfn< _cxx_proj_t, _cxx_build_t > use_lib( lib ) {
	cprint( '{y}checking support for library {c}', lib, ' {0}... ' );
	flush_out();
	__file__ = __SRC_DIR__ + '/tests/' + lib + '.cfg';

	if !fs.exists( __file__ ) {
		__file__ = __SRC_DIR__ + '/tests/' + lib + '_cpp.cfg';
		if !fs.exists( __file__ ) {
			cprintln( '{r}no (library does not exist){0}' );
			println( __file__ );
			return false;
		}
	}

	__f__ = fopen( __file__, 'r' );
	__line__ = "";
	__map__ = {};
	for ; __f__.read( __line__ ); {
		__splt__ = __line__.split( '=' );
		__map__.insert( __splt__[ 0 ].trim(), __splt__[ 1 ].trim() );
	}
	if !__map__.find( 'file' ) {
		println( 'could not find \'file\' declaration in library config: ', __file__ );
		exit( 1 );
	}

	__src__ = __SRC_DIR__ + '/tests/' + __map__[ 'file' ];
	__inc_dirs__ = "";
	__lib_dirs__ = "";
	__lib_flags__ = "";

	__comp_str__ = os.get_env( 'CC' ) + ' ';
	if __map__.find( '__lang__' ) {
		__lang__ = __map__[ '__lang__' ];
		if __lang__ == 'c' {
			if os.get_env( 'CC' ) == 'clang++' {
				__comp_str__ = 'clang ';
			} else {
				__comp_str__ = 'gcc ';
			}
		}
	}

	if __map__.find( '__inc_dirs__' ) {
		__inc_dirs__ = __map__[ 'inc_dirs' ];
	}
	if __map__.find( '__lib_dirs__' ) {
		__lib_dirs__ = __map__[ 'lib_dirs' ];
	}
	if __map__.find( '__lib_flags__' ) {
		__lib_flags__ = __map__[ 'lib_flags' ];
	}
	__comp_str__ += __src__ + ' ' + __inc_dirs__ + ' ' + __lib_dirs__ + ' ' + __lib_flags__ + ' -o /dev/null 2>/dev/null';

	if os.exec( __comp_str__ ) != 0 {
		cprintln( '{r}no{0}' );
		return false;
	}
	if !__inc_dirs__.empty() { self.__inc_dirs__.push( __inc_dirs__ ); }
	if !__lib_dirs__.empty() { self.__lib_dirs__.push( __lib_dirs__ ); }
	if !__lib_flags__.empty() { self.__lib_flags__.push( __lib_flags__ ); }
	cprintln( '{g}yes{0}' );
	return true;
}
